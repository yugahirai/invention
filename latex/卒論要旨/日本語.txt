研究背景

量子計算機は、いくつかの問題において通常の古典計算機に対して計算量的な優位性を持つと
期待されている。一方で、計算に用いる物理量子ビットのエラー率が高いことが課題となっており、
現在まで様々な誤り訂正手法が考えられてきた。その中でも、近傍の量子ビット間での演算のみで
実装でき、比較的高速な誤り推定アルゴリズムが知られている表面符号(Surface Code)は実現
可能性という観点で最も有望視されている。表面符号ではFig.1(a)のように、物量量子ビットを
２次元格子状に並べることによって誤り耐性のある論理量子ビット構成する。
表面符号によって符号化された論理量子ビットに対して誤り訂正をしながらゲート操作する手法として、
格子手術(Lattice Surgery)が知られている。Fig.1(b)に示すように、2つの表面符号それぞれに
エンコードされた2つの論理量子ビットはその間の補助量子ビットを用いることによって、ゲート操作を
することができる。
量子ドットを用いて量子コンピューターを実現させる半導体量子コンピューターでは1次元ループパイ
プラインを作成することができ、そのような構造を用いることによって表面符号を何枚も重ねたような
疑似3次元表面符号を構成することができる。このようなアーキテクチャを用いることにより、今までの
ボトルネックであった複数の論理量子ビット間の格子手術の並列化を改善することを検討する。そして、
その他のボトルネックである、魔法状態蒸留(Magic State Distillation)の魔法工場(Magic
Factory)の効率化を計る。他にも表面符号を階層状に扱うアーキテクチャは、中性原子、超伝導量子コンピューターでも提案
されている。その中でも、我々、物理量子ビットのスケーラビリティが非常に高い半導体量子コン
ピューターに注目する。



方法
配置されたcode distance $d$, 1論理量子ビットをエンコードできる表面符号をパッチ、d回の
シンドローム測定を1 code beatと呼ぶことにする。また、3次元上で表面符号を考える時、一つ上の層
に上がることを、"go upstairs"、1つ下の階に下がることを、"go downstairs"と呼ぶことにする。
表面符号を3次元で格子手術を考える時はこのfloor間の移動を慎重に考えなければならない。通常の2次
元平面での格子手術では、任意の2つのパッチを一回のcode beatで繋ぐことでき、そのような操作に
かかる時間は物理ビットへのゲート操作、測定の時間に依存し、パッチ間の距離には全く依存しない。
しかし、階層間を移動する時は隣り合う階層間でtransversal-CNOTゲートをかけなければならず、これ
にかかる時間は階層間の移動距離に比例する。この論文では、連続で2階まで登ったり、降りたりできると
仮定する。また、looped pipelineアーキテクチャでは、最上階で go up stairsすると、最下階に
降りることができ、その逆も然りである。このような前提で格子手術、魔法状態蒸留の効率化を計る。


結果
lattice surgeryを３次元で考えることによって、２次元の場合に比べて大幅に改善された。そのグラフ
Fig.1(d)に示す。グラフからわかる通り、2次元lattice　surgeryでは多くのSurgery操作が距離100
を超えているが、3D lattice surgeryでは一番長い距離でも100を超えていない。しかし、2Dと3Dでは
平均の距離はあまり変わらなかった。Fig.2(e)にmagic factoryの設計図を示す。このような構造によ
り、3D surface code上では、8 code beatsで1つのmagic stateを生成できることがわかった。


結論と今後の展望
3D surface code用いることによって、lattice surgeryのroutingのオーバーヘッドが改善され、
論理量子ビットのエラー率を下げることができる。しかし、一つ一つのsurgery操作の距離が短くなったとσ
しても、並列処理の量が増えているため、1 code  beatのデコードしなければならない物理量子ビットは
増えている。これは、古典計算機にものすごく負荷がかかるため改善しなければならない。今回用いた3D
Surface code上での論理量子ビットの配置について最適性について全く考慮していない。また、示した
magic factoryの構造がもっと低レイヤーのpipeline architectureでどのように動作するのかを解
析する必要がある。これらのことを今後の展望として研究していこうと思う。
